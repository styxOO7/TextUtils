{"version":3,"sources":["components/Navbar.js","components/TextBox.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","href","style","fontWeight","title","type","defaultProps","about","TextBox","useState","text","setText","textInsights","k","insights","num","letters","length","split","i","includes","toUpperCase","newText","replace","paddingLeft","fontSize","htmlFor","heading","onChange","event","console","log","target","value","fontFamily","id","rows","onClick","toLowerCase","ntext","trim","min","sec","parseInt","toFixed","readingTime","whiteSpace","background","padding","borderLeft","document","getElementById","select","navigator","clipboard","writeText","App","role","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.859358af.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"#\" style={{ fontWeight: \"Bold\"}}>{props.title}</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    {/* <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                            </li> \r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\">{props.about}</a>\r\n                            </li>\r\n                        </ul> */}\r\n                        {/* <form className=\"d-flex\">\r\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                            <button className=\"btn btn-success\" type=\"submit\">Search</button>\r\n                        </form> */}\r\n                    {/* </div>  */}\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string,\r\n    about: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: \"Set Title here\",\r\n    about: \"Add about yourself\"\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function TextBox(props) {\r\n    // state variable\r\n    const [text, setText] = useState(\"\");\r\n    // text = \"Please change the text\";  // incorrect way\r\n    // setText(\"Please change the text\");  // correct way\r\n\r\n    // functions:\r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n    const handleLowClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n\r\n    const removePun = () => {\r\n        let regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\r\n        setText(text.replace(regex, \"\"));\r\n    }\r\n\r\n    const removeExtraSpace = () => {\r\n        // const sentence = '    My string with a    lot   of Whitespace.  '.replace(/\\s+/g, ' ').trim()\r\n        // g indicates iteration over the string.\r\n        // \\s: whitespace detection in regEx\r\n        // trim(): for trimming at start and end\r\n        // regEx literal: /text/\r\n\r\n        let ntext = text.replace(/ \\s+ /g, \" \").trim();\r\n        setText(ntext);\r\n    }\r\n\r\n    const copyText = ()=>{\r\n        let text = document.getElementById(\"textBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n    }\r\n\r\n    const clearText = ()=>{\r\n        setText(\"\");\r\n    }\r\n\r\n    const readingTime = ()=>{\r\n        let min = 0;\r\n        let sec = 0;\r\n        if(text.length > 1){\r\n            min = parseInt(0.006 * text.split(\" \").length);\r\n            sec = ((0.006 * text.split(\" \").length - parseInt(0.006 * text.split(\" \").length)) * 60).toFixed(2);\r\n        }\r\n\r\n        return min + \" Minutes \" + sec + \" seconds to read\";\r\n    }\r\n\r\n    // const removeEndLines = ()=>{\r\n    //     // let endlineExp = \"\";\r\n    //     // let ntext = text.replace(/[\\r\\n]+/gm, \" \");\r\n    //     // setText(ntext);\r\n    //     // let ntext = \"\";\r\n    //     // for(let i=0;i<text.length;i++){\r\n    //     //     if(text[i] != \"\\n\" || text[i] != \"\\r\") ntext[i] += text[i];\r\n    //     // }\r\n    //     // setText(ntext);\r\n    // }\r\n\r\n    const textInsights = (k) => {\r\n        // calling via index: wordcount, line count, number count, punctuations, capital, small letter\r\n        let insights = [0, 0, 0, 0, 0, 0];\r\n\r\n        let num = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"];\r\n        let letters = \"abcdefghijklmnopqrstuvwxyz\";\r\n        let punRegex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\r\n\r\n        // wordcount\r\n        if (text.length === 0) {\r\n            insights[0] = 0;\r\n        } else insights[0] = text.split(\" \").length - 1;\r\n\r\n        // line count, number count, capitals, smalls\r\n        for (let i = 0; i < text.length; i++) {\r\n            if (text[i] === \"\\n\") insights[1]++;\r\n            if (num.includes(text[i])) insights[2]++;\r\n            else if (letters.includes(text[i])) insights[5]++;\r\n            else if (letters.toUpperCase().includes(text[i])) insights[4]++;\r\n        }\r\n\r\n        // punctuations\r\n        let newText = text;\r\n        newText = newText.replace(punRegex, \"\");\r\n        insights[3] = text.length - newText.length;\r\n\r\n        return insights[k];\r\n    }\r\n\r\n\r\n    // for enabling typing: function with an event to handle the change in the variable text. i.e. instant change in state\r\n    const handleOnChange = (event) => {\r\n        console.log(\"On change.\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n\r\n    // styling\r\n    const textBoxStyle = {\r\n        fontSize: \"16px\",\r\n        background: \"#f4f4f4\",\r\n        padding: \"24px\",\r\n        borderLeft: \"6px solid #005282\",\r\n        fontFamily: \"consolas\"\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <br></br>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"/\" style={{ paddingLeft: 60, fontSize: \"19px\", fontWeight: \"Bold\" }}>\r\n                        <div className=\"container mx-3\" >\r\n                            <div className=\"row\">\r\n                                <div className=\"col\">\r\n                                    <b>Total Words = {textInsights(0)}</b>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <b>Number Count = {textInsights(2)}</b>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <b>Capital letters = {textInsights(4)}</b>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <b>Small letters = {textInsights(5)}</b>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <b>Punctuations = {textInsights(3)}</b>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <b>Total lines = {textInsights(1) + 1}</b>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                </div>\r\n            </nav>\r\n            <br></br>\r\n\r\n            <div>\r\n                <div className=\"mb-3 mx-3\">\r\n                    <h3><b><label htmlFor=\"textBox\" className=\"form-label\">{props.heading}</label></b></h3>\r\n                    <textarea className=\"form-control\" onChange={handleOnChange} style={{ fontFamily: \"consolas\" }} value={text} id=\"textBox\" rows=\"6\"></textarea>\r\n                </div>\r\n                <div className=\"form-check form-switch mx-3\">\r\n                    <input className=\"form-check-input\" onClick={handleUpClick} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">UpperCase</label>\r\n                </div>\r\n                <div className=\"form-check form-switch mx-3\">\r\n                    <input className=\"form-check-input\" onClick={handleLowClick} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">LowerCase</label>\r\n                </div>\r\n                <div className=\"form-check form-switch mx-3\">\r\n                    <input className=\"form-check-input\" onClick={removePun} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Remove Punctuations</label>\r\n                </div>\r\n                <div className=\"form-check form-switch mx-3\">\r\n                    <input className=\"form-check-input\" onClick={removeExtraSpace} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Remove Extra Spaces</label>\r\n                </div>\r\n                {/* <div className=\"form-check form-switch mx-3\">\r\n                    <input className=\"form-check-input\" onClick={removeEndLines} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Remove New lines</label>\r\n                </div> */}\r\n            </div>\r\n\r\n            <div className=\"container my-3 mx-0\">\r\n                <p>{readingTime()}</p>\r\n                <h3><b>Preview</b></h3>\r\n                <pre style={{ whiteSpace: 'pre-wrap' }}><p style={textBoxStyle}>{text}</p></pre>\r\n            </div>\r\n\r\n            <button type=\"button\" className=\"btn btn-info\" onClick={copyText}>Copy text</button>\r\n            <button type=\"button\" className=\"btn btn-danger mx-2\" onClick={clearText}>Clear text</button>\r\n            <div className=\"cont my-4\"></div>\r\n        </>\r\n    )\r\n}\r\n","// import './App.css'\nimport './App.css';\nimport Navbar from './components/Navbar.js';\nimport TextBox from './components/TextBox.js';\nimport About from './components/About.js';\n\nfunction App() {\n  return (\n    <>\n      <Navbar title=\"TextUtils\" />\n      <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\n        <strong>Welcome to Text Analyser!</strong> You can analyze your text on the basis of many functionalities present here!\n        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n      </div>\n      {/* <div className=\"container my-3\">\n        <About/>\n      </div> */}\n      <div className=\"container\">\n        <TextBox heading=\"Enter your text here:\" />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}